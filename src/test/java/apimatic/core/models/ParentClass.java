/*
 * OptionalAndNullableLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package apimatic.core.models;

import java.math.BigDecimal;
import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import io.apimatic.core.types.OptionalNullable;

/**
 * This is a model class for ParentClass type.
 */
public class ParentClass extends GrandParentClass {
    private OptionalNullable<Integer> mClass;
    private OptionalNullable<Double> precision;
    private OptionalNullable<BigDecimal> bigDecimal;
    private OptionalNullable<String> parentOptionalNullableWithDefaultValue;
    private String parentOptional;
    private String parentRequiredNullable;
    private String parentRequired;

    /**
     * Default constructor.
     */
    public ParentClass() {
        super();
        parentRequired = "not nullable and required";
        mClass = OptionalNullable.of(23);
        parentOptionalNullableWithDefaultValue = OptionalNullable.of("Has default value");
    }

    /**
     * Initialization constructor.
     * @param grandParentRequiredNullable String value for grandParentRequiredNullable.
     * @param grandParentRequired String value for grandParentRequired.
     * @param parentRequiredNullable String value for parentRequiredNullable.
     * @param parentRequired String value for parentRequired.
     * @param grandParentOptional String value for grandParentOptional.
     * @param mClass Integer value for mClass.
     * @param precision Double value for precision.
     * @param bigDecimal BigDecimal value for bigDecimal.
     * @param parentOptionalNullableWithDefaultValue String value for
     *        parentOptionalNullableWithDefaultValue.
     * @param parentOptional String value for parentOptional.
     */
    public ParentClass(final String grandParentRequiredNullable, final String grandParentRequired,
            final String parentRequiredNullable, final String parentRequired,
            final String grandParentOptional, final Integer mClass, final Double precision,
            final BigDecimal bigDecimal, final String parentOptionalNullableWithDefaultValue,
            final String parentOptional) {
        super(grandParentRequiredNullable, grandParentRequired, grandParentOptional);
        this.mClass = OptionalNullable.of(mClass);
        this.precision = OptionalNullable.of(precision);
        this.bigDecimal = OptionalNullable.of(bigDecimal);
        this.parentOptionalNullableWithDefaultValue =
                OptionalNullable.of(parentOptionalNullableWithDefaultValue);
        this.parentOptional = parentOptional;
        this.parentRequiredNullable = parentRequiredNullable;
        this.parentRequired = parentRequired;
    }

    /**
     * Internal initialization constructor.
     */
    protected ParentClass(final String grandParentRequiredNullable,
            final String grandParentRequired, final String parentRequiredNullable,
            final String parentRequired, final String grandParentOptional,
            final OptionalNullable<Integer> mClass, final OptionalNullable<Double> precision,
            final OptionalNullable<BigDecimal> bigDecimal,
            final OptionalNullable<String> parentOptionalNullableWithDefaultValue,
            final String parentOptional) {
        super(grandParentRequiredNullable, grandParentRequired, grandParentOptional);
        this.mClass = mClass;
        this.precision = precision;
        this.bigDecimal = bigDecimal;
        this.parentOptionalNullableWithDefaultValue = parentOptionalNullableWithDefaultValue;
        this.parentOptional = parentOptional;
        this.parentRequiredNullable = parentRequiredNullable;
        this.parentRequired = parentRequired;
    }

    /**
     * Internal Getter for Class.
     * @return Returns the Internal Integer
     */
    @JsonGetter("class")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<Integer> internalGetClassField() {
        return this.mClass;
    }

    /**
     * Getter for Class.
     * @return Returns the Integer
     */
    public Integer getClassField() {
        return OptionalNullable.getFrom(mClass);
    }

    /**
     * Setter for Class.
     * @param classField Value for Integer
     */
    @JsonSetter("class")
    public void setClassField(Integer classField) {
        this.mClass = OptionalNullable.of(classField);
    }

    /**
     * UnSetter for Class.
     */
    public void unsetClassField() {
        mClass = null;
    }

    /**
     * Internal Getter for Precision.
     * @return Returns the Internal Double
     */
    @JsonGetter("precision")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<Double> internalGetPrecision() {
        return this.precision;
    }

    /**
     * Getter for Precision.
     * @return Returns the Double
     */
    public Double getPrecision() {
        return OptionalNullable.getFrom(precision);
    }

    /**
     * Setter for Precision.
     * @param precision Value for Double
     */
    @JsonSetter("precision")
    public void setPrecision(Double precision) {
        this.precision = OptionalNullable.of(precision);
    }

    /**
     * UnSetter for Precision.
     */
    public void unsetPrecision() {
        precision = null;
    }

    /**
     * Internal Getter for BigDecimal.
     * @return Returns the Internal BigDecimal
     */
    @JsonGetter("Big_Decimal")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<BigDecimal> internalGetBigDecimal() {
        return this.bigDecimal;
    }

    /**
     * Getter for BigDecimal.
     * @return Returns the BigDecimal
     */
    public BigDecimal getBigDecimal() {
        return OptionalNullable.getFrom(bigDecimal);
    }

    /**
     * Setter for BigDecimal.
     * @param bigDecimal Value for BigDecimal
     */
    @JsonSetter("Big_Decimal")
    public void setBigDecimal(BigDecimal bigDecimal) {
        this.bigDecimal = OptionalNullable.of(bigDecimal);
    }

    /**
     * UnSetter for BigDecimal.
     */
    public void unsetBigDecimal() {
        bigDecimal = null;
    }

    /**
     * Internal Getter for ParentOptionalNullableWithDefaultValue.
     * @return Returns the Internal String
     */
    @JsonGetter("Parent_Optional_Nullable_With_Default_Value")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetParentOptionalNullableWithDefaultValue() {
        return this.parentOptionalNullableWithDefaultValue;
    }

    /**
     * Getter for ParentOptionalNullableWithDefaultValue.
     * @return Returns the String
     */
    public String getParentOptionalNullableWithDefaultValue() {
        return OptionalNullable.getFrom(parentOptionalNullableWithDefaultValue);
    }

    /**
     * Setter for ParentOptionalNullableWithDefaultValue.
     * @param parentOptionalNullableWithDefaultValue Value for String
     */
    @JsonSetter("Parent_Optional_Nullable_With_Default_Value")
    public void setParentOptionalNullableWithDefaultValue(
            String parentOptionalNullableWithDefaultValue) {
        this.parentOptionalNullableWithDefaultValue =
                OptionalNullable.of(parentOptionalNullableWithDefaultValue);
    }

    /**
     * UnSetter for ParentOptionalNullableWithDefaultValue.
     */
    public void unsetParentOptionalNullableWithDefaultValue() {
        parentOptionalNullableWithDefaultValue = null;
    }

    /**
     * Getter for ParentOptional.
     * @return Returns the String
     */
    @JsonGetter("Parent_Optional")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getParentOptional() {
        return parentOptional;
    }

    /**
     * Setter for ParentOptional.
     * @param parentOptional Value for String
     */
    @JsonSetter("Parent_Optional")
    public void setParentOptional(String parentOptional) {
        this.parentOptional = parentOptional;
    }

    /**
     * Getter for ParentRequiredNullable.
     * @return Returns the String
     */
    @JsonGetter("Parent_Required_Nullable")
    public String getParentRequiredNullable() {
        return parentRequiredNullable;
    }

    /**
     * Setter for ParentRequiredNullable.
     * @param parentRequiredNullable Value for String
     */
    @JsonSetter("Parent_Required_Nullable")
    public void setParentRequiredNullable(String parentRequiredNullable) {
        this.parentRequiredNullable = parentRequiredNullable;
    }

    /**
     * Getter for ParentRequired.
     * @return Returns the String
     */
    @JsonGetter("Parent_Required")
    public String getParentRequired() {
        return parentRequired;
    }

    /**
     * Setter for ParentRequired.
     * @param parentRequired Value for String
     */
    @JsonSetter("Parent_Required")
    public void setParentRequired(String parentRequired) {
        this.parentRequired = parentRequired;
    }

    /**
     * Converts this ParentClass into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "ParentClass [" + "parentRequiredNullable=" + parentRequiredNullable
                + ", parentRequired=" + parentRequired + ", mClass=" + mClass + ", precision="
                + precision + ", bigDecimal=" + bigDecimal
                + ", parentOptionalNullableWithDefaultValue="
                + parentOptionalNullableWithDefaultValue + ", parentOptional=" + parentOptional
                + ", grandParentRequiredNullable=" + getGrandParentRequiredNullable()
                + ", grandParentRequired=" + getGrandParentRequired() + ", grandParentOptional="
                + getGrandParentOptional() + "]";
    }

    /**
     * Builds a new {@link ParentClass.Builder} object. Creates the instance with the state of the
     * current model.
     * @return a new {@link ParentClass.Builder} object
     */
    public Builder toParentClassBuilder() {
        Builder builder =
                new Builder(getGrandParentRequiredNullable(), getGrandParentRequired(),
                        parentRequiredNullable, parentRequired).parentOptional(getParentOptional())
                                .grandParentOptional(getGrandParentOptional());
        builder.mClass = internalGetClassField();
        builder.precision = internalGetPrecision();
        builder.bigDecimal = internalGetBigDecimal();
        builder.parentOptionalNullableWithDefaultValue =
                internalGetParentOptionalNullableWithDefaultValue();
        return builder;
    }

    /**
     * Class to build instances of {@link ParentClass}.
     */
    public static class Builder {
        private String grandParentRequiredNullable;
        private String grandParentRequired = "not nullable and required";
        private String parentRequiredNullable;
        private String parentRequired = "not nullable and required";
        private String grandParentOptional;
        private OptionalNullable<Integer> mClass = OptionalNullable.of(23);
        private OptionalNullable<Double> precision;
        private OptionalNullable<BigDecimal> bigDecimal;
        private OptionalNullable<String> parentOptionalNullableWithDefaultValue =
                OptionalNullable.of("Has default value");
        private String parentOptional;

        /**
         * Initialization constructor.
         */
        public Builder() {}

        /**
         * Initialization constructor.
         * @param grandParentRequiredNullable String value for grandParentRequiredNullable.
         * @param grandParentRequired String value for grandParentRequired.
         * @param parentRequiredNullable String value for parentRequiredNullable.
         * @param parentRequired String value for parentRequired.
         */
        public Builder(final String grandParentRequiredNullable, final String grandParentRequired,
                final String parentRequiredNullable, final String parentRequired) {
            this.grandParentRequiredNullable = grandParentRequiredNullable;
            this.grandParentRequired = grandParentRequired;
            this.parentRequiredNullable = parentRequiredNullable;
            this.parentRequired = parentRequired;
        }

        /**
         * Setter for grandParentRequiredNullable.
         * @param grandParentRequiredNullable String value for grandParentRequiredNullable.
         * @return Builder
         */
        public Builder grandParentRequiredNullable(String grandParentRequiredNullable) {
            this.grandParentRequiredNullable = grandParentRequiredNullable;
            return this;
        }

        /**
         * Setter for grandParentRequired.
         * @param grandParentRequired String value for grandParentRequired.
         * @return Builder
         */
        public Builder grandParentRequired(String grandParentRequired) {
            this.grandParentRequired = grandParentRequired;
            return this;
        }

        /**
         * Setter for parentRequiredNullable.
         * @param parentRequiredNullable String value for parentRequiredNullable.
         * @return Builder
         */
        public Builder parentRequiredNullable(String parentRequiredNullable) {
            this.parentRequiredNullable = parentRequiredNullable;
            return this;
        }

        /**
         * Setter for parentRequired.
         * @param parentRequired String value for parentRequired.
         * @return Builder
         */
        public Builder parentRequired(String parentRequired) {
            this.parentRequired = parentRequired;
            return this;
        }

        /**
         * Setter for grandParentOptional.
         * @param grandParentOptional String value for grandParentOptional.
         * @return Builder
         */
        public Builder grandParentOptional(String grandParentOptional) {
            this.grandParentOptional = grandParentOptional;
            return this;
        }

        /**
         * Setter for mClass.
         * @param mClass Integer value for mClass.
         * @return Builder
         */
        public Builder mClass(Integer mClass) {
            this.mClass = OptionalNullable.of(mClass);
            return this;
        }

        /**
         * UnSetter for mClass.
         * @return Builder
         */
        public Builder unsetMClass() {
            mClass = null;
            return this;
        }

        /**
         * Setter for precision.
         * @param precision Double value for precision.
         * @return Builder
         */
        public Builder precision(Double precision) {
            this.precision = OptionalNullable.of(precision);
            return this;
        }

        /**
         * UnSetter for precision.
         * @return Builder
         */
        public Builder unsetPrecision() {
            precision = null;
            return this;
        }

        /**
         * Setter for bigDecimal.
         * @param bigDecimal BigDecimal value for bigDecimal.
         * @return Builder
         */
        public Builder bigDecimal(BigDecimal bigDecimal) {
            this.bigDecimal = OptionalNullable.of(bigDecimal);
            return this;
        }

        /**
         * UnSetter for bigDecimal.
         * @return Builder
         */
        public Builder unsetBigDecimal() {
            bigDecimal = null;
            return this;
        }

        /**
         * Setter for parentOptionalNullableWithDefaultValue.
         * @param parentOptionalNullableWithDefaultValue String value for
         *        parentOptionalNullableWithDefaultValue.
         * @return Builder
         */
        public Builder parentOptionalNullableWithDefaultValue(
                String parentOptionalNullableWithDefaultValue) {
            this.parentOptionalNullableWithDefaultValue =
                    OptionalNullable.of(parentOptionalNullableWithDefaultValue);
            return this;
        }

        /**
         * UnSetter for parentOptionalNullableWithDefaultValue.
         * @return Builder
         */
        public Builder unsetParentOptionalNullableWithDefaultValue() {
            parentOptionalNullableWithDefaultValue = null;
            return this;
        }

        /**
         * Setter for parentOptional.
         * @param parentOptional String value for parentOptional.
         * @return Builder
         */
        public Builder parentOptional(String parentOptional) {
            this.parentOptional = parentOptional;
            return this;
        }

        /**
         * Builds a new {@link ParentClass} object using the set fields.
         * @return {@link ParentClass}
         */
        public ParentClass build() {
            return new ParentClass(grandParentRequiredNullable, grandParentRequired,
                    parentRequiredNullable, parentRequired, grandParentOptional, mClass, precision,
                    bigDecimal, parentOptionalNullableWithDefaultValue, parentOptional);
        }
    }
}
